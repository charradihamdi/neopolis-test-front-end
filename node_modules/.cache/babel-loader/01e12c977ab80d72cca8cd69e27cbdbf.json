{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charr\\\\Desktop\\\\New folder\\\\front-end-app\\\\src\\\\components\\\\Profil\\\\UpdateProfil.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport LeftNav from \"../LeftNav\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport UploadImg from \"./UploadImg\";\nimport { updateBio } from \"../../actions/user.actions\";\nimport { dateParser } from \"../Utils\";\nimport FollowHandler from \"./FollowHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfil = () => {\n  _s();\n\n  const [bio, setBio] = useState(\"\");\n  const [updateForm, setUpdateForm] = useState(false);\n  const userData = useSelector(state => state.userReducer);\n  const usersData = useSelector(state => state.usersReducer);\n  const error = useSelector(state => state.errorReducer.userError);\n  const dispatch = useDispatch();\n  const [followingPopup, setFollowingPopup] = useState(false);\n  const [followersPopup, setFollowersPopup] = useState(false);\n\n  const handleUpdate = () => {\n    dispatch(updateBio(userData._id, bio));\n    setUpdateForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profil-container\",\n    children: [/*#__PURE__*/_jsxDEV(LeftNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Profil de \", userData.pseudo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"update-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-part\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Photo de profil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.picture,\n          alt: \"user-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadImg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error.maxSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error.format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-part\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bio-update\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), updateForm === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setUpdateForm(!updateForm),\n              children: userData.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setUpdateForm(!updateForm),\n              children: \"Modifier bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), updateForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              defaultValue: userData.bio,\n              onChange: e => setBio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdate,\n              children: \"Valider modifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Membre depuis le : \", dateParser(userData.createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => setFollowingPopup(true),\n          children: [\"Abonnements : \", userData.following ? userData.following.length : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => setFollowersPopup(true),\n          children: [\"Abonn\\xE9s : \", userData.followers ? userData.followers.length : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), followingPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-profil-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Abonnements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cross\",\n          onClick: () => setFollowingPopup(false),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersData.map(user => {\n            for (let i = 0; i < userData.following.length; i++) {\n              if (user._id === userData.following[i]) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.picture,\n                    alt: \"user-pic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: user.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"follow-handler\",\n                    children: /*#__PURE__*/_jsxDEV(FollowHandler, {\n                      idToFollow: user._id,\n                      type: 'suggestion'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this);\n              }\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), followersPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-profil-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Abonn\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cross\",\n          onClick: () => setFollowersPopup(false),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersData.map(user => {\n            for (let i = 0; i < userData.followers.length; i++) {\n              if (user._id === userData.followers[i]) {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user.picture,\n                    alt: \"user-pic\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: user.pseudo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"follow-handler\",\n                    children: /*#__PURE__*/_jsxDEV(FollowHandler, {\n                      idToFollow: user._id,\n                      type: 'suggestion'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, this)]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, this);\n              }\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProfil, \"Hd8YSd11+EusEgngYB5S4m9dROs=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = UpdateProfil;\nexport default UpdateProfil;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfil\");","map":{"version":3,"sources":["C:/Users/charr/Desktop/New folder/front-end-app/src/components/Profil/UpdateProfil.js"],"names":["React","useState","LeftNav","useDispatch","useSelector","UploadImg","updateBio","dateParser","FollowHandler","UpdateProfil","bio","setBio","updateForm","setUpdateForm","userData","state","userReducer","usersData","usersReducer","error","errorReducer","userError","dispatch","followingPopup","setFollowingPopup","followersPopup","setFollowersPopup","handleUpdate","_id","pseudo","picture","maxSize","format","e","target","value","createdAt","following","length","followers","map","user","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport LeftNav from \"../LeftNav\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UploadImg from \"./UploadImg\";\r\nimport { updateBio } from \"../../actions/user.actions\";\r\nimport { dateParser } from \"../Utils\";\r\nimport FollowHandler from \"./FollowHandler\";\r\n\r\nconst UpdateProfil = () => {\r\n  const [bio, setBio] = useState(\"\");\r\n  const [updateForm, setUpdateForm] = useState(false);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const error = useSelector((state) => state.errorReducer.userError);\r\n  const dispatch = useDispatch();\r\n  const [followingPopup, setFollowingPopup] = useState(false);\r\n  const [followersPopup, setFollowersPopup] = useState(false);\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(updateBio(userData._id, bio));\r\n    setUpdateForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"profil-container\">\r\n      <LeftNav />\r\n      <h1> Profil de {userData.pseudo}</h1>\r\n      <div className=\"update-container\">\r\n        <div className=\"left-part\">\r\n          <h3>Photo de profil</h3>\r\n          <img src={userData.picture} alt=\"user-pic\" />\r\n          <UploadImg />\r\n          <p>{error.maxSize}</p>\r\n          <p>{error.format}</p>\r\n        </div>\r\n        <div className=\"right-part\">\r\n          <div className=\"bio-update\">\r\n            <h3>Bio</h3>\r\n            {updateForm === false && (\r\n              <>\r\n                <p onClick={() => setUpdateForm(!updateForm)}>{userData.bio}</p>\r\n                <button onClick={() => setUpdateForm(!updateForm)}>\r\n                  Modifier bio\r\n                </button>\r\n              </>\r\n            )}\r\n            {updateForm && (\r\n              <>\r\n                <textarea\r\n                  type=\"text\"\r\n                  defaultValue={userData.bio}\r\n                  onChange={(e) => setBio(e.target.value)}\r\n                ></textarea>\r\n                <button onClick={handleUpdate}>Valider modifications</button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <h4>Membre depuis le : {dateParser(userData.createdAt)}</h4>\r\n          <h5 onClick={() => setFollowingPopup(true)}>\r\n            Abonnements : {userData.following ? userData.following.length : \"\"}\r\n          </h5>\r\n          <h5 onClick={() => setFollowersPopup(true)}>\r\n            Abonnés : {userData.followers ? userData.followers.length : \"\"}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n      {followingPopup && (\r\n        <div className=\"popup-profil-container\">\r\n          <div className=\"modal\">\r\n            <h3>Abonnements</h3>\r\n            <span className=\"cross\" onClick={() => setFollowingPopup(false)}>\r\n              &#10005;\r\n            </span>\r\n            <ul>\r\n              {usersData.map((user) => {\r\n                for (let i = 0; i < userData.following.length; i++) {\r\n                  if (user._id === userData.following[i]) {\r\n                    return (\r\n                      <li key={user._id}>\r\n                        <img src={user.picture} alt=\"user-pic\" />\r\n                        <h4>{user.pseudo}</h4>\r\n                        <div className=\"follow-handler\">\r\n                          <FollowHandler idToFollow={user._id} type={'suggestion'} />\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  } \r\n                }\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {followersPopup && (\r\n        <div className=\"popup-profil-container\">\r\n          <div className=\"modal\">\r\n            <h3>Abonnés</h3>\r\n            <span className=\"cross\" onClick={() => setFollowersPopup(false)}>\r\n              &#10005;\r\n            </span>\r\n            <ul>\r\n              {usersData.map((user) => {\r\n                for (let i = 0; i < userData.followers.length; i++) {\r\n                  if (user._id === userData.followers[i]) {\r\n                    return (\r\n                      <li key={user._id}>\r\n                        <img src={user.picture} alt=\"user-pic\" />\r\n                        <h4>{user.pseudo}</h4>\r\n                        <div className=\"follow-handler\">\r\n                          <FollowHandler idToFollow={user._id} type={'suggestion'} />\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }\r\n                }\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfil;\r\n"]},"metadata":{},"sourceType":"module"}