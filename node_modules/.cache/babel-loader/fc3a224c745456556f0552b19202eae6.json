{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charr\\\\Desktop\\\\New folder\\\\front-end-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Routes from \"./components/Routes\";\nimport { UidContext } from \"./components/AppContext\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"./actions/user.actions\";\nimport { getEvents } from \"./actions/events\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [uid, setUid] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getEvents());\n  }, []);\n  useEffect(() => {\n    const fetchToken = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}jwtid`,\n        withCredentials: true\n      }).then(res => {\n        setUid(res.data);\n      }).catch(err => console.log(\"No token\"));\n    };\n\n    fetchToken();\n    if (uid) dispatch(getUser(uid));\n  }, [uid, dispatch]);\n  return /*#__PURE__*/_jsxDEV(UidContext.Provider, {\n    value: uid,\n    children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Y4YcO2JYzga4Td/03ToB+rgwNwo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/charr/Desktop/New folder/front-end-app/src/App.js"],"names":["React","useEffect","useState","Routes","UidContext","axios","useDispatch","getUser","getEvents","App","uid","setUid","dispatch","fetchToken","method","url","process","env","REACT_APP_API_URL","withCredentials","then","res","data","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMU,QAAQ,GAAGN,WAAW,EAA5B;AACDL,EAAAA,SAAS,CAAC,MAAM;AACbW,IAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD,GAFO,EAEL,EAFK,CAAT;AAGCP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMR,KAAK,CAAC;AACVS,QAAAA,MAAM,EAAE,KADE;AAEVC,QAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,OAF5B;AAGVC,QAAAA,eAAe,EAAE;AAHP,OAAD,CAAL,CAKHC,IALG,CAKGC,GAAD,IAAS;AACbV,QAAAA,MAAM,CAACU,GAAG,CAACC,IAAL,CAAN;AACD,OAPG,EAQHC,KARG,CAQIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,UAAZ,CARZ,CAAN;AASD,KAVD;;AAWAb,IAAAA,UAAU;AAEV,QAAIH,GAAJ,EAASE,QAAQ,CAACL,OAAO,CAACG,GAAD,CAAR,CAAR;AACV,GAfQ,EAeN,CAACA,GAAD,EAAME,QAAN,CAfM,CAAT;AAiBA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEF,GAA5B;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;GAAMD,G;UAGaH,W;;;KAHbG,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Routes from \"./components/Routes\";\r\nimport { UidContext } from \"./components/AppContext\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUser } from \"./actions/user.actions\";\r\nimport { getEvents } from \"./actions/events\";\r\n\r\nconst App = () => {\r\n\r\n  const [uid, setUid] = useState(null);\r\n  const dispatch = useDispatch();\r\n useEffect(() => {\r\n    dispatch(getEvents());\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchToken = async () => {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${process.env.REACT_APP_API_URL}jwtid`,\r\n        withCredentials: true,\r\n      })\r\n        .then((res) => {\r\n          setUid(res.data);\r\n        })\r\n        .catch((err) => console.log(\"No token\"));\r\n    };\r\n    fetchToken();\r\n\r\n    if (uid) dispatch(getUser(uid));\r\n  }, [uid, dispatch]);\r\n\r\n  return (\r\n    <UidContext.Provider value={uid}>\r\n      <Routes />\r\n    </UidContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}