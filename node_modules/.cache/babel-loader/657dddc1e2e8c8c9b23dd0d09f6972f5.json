{"ast":null,"code":"import axios from \"axios\"; // posts\n\nexport const GET_POSTS = \"GET_POSTS\";\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\nexport const ADD_POST = \"ADD_POST\";\nexport const LIKE_POST = \"LIKE_POST\";\nexport const UNLIKE_POST = \"UNLIKE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const DELETE_POST = \"DELETE_POST\"; // comments\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\"; // trends\n\nexport const GET_TRENDS = \"GET_TRENDS\"; // errors\n\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\";\nexport const getPosts = num => {\n  return dispatch => {\n    return axios.get(`${process.env.REACT_APP_API_URL}api/post/`).then(res => {\n      const array = res.data.slice(0, num);\n      dispatch({\n        type: GET_POSTS,\n        payload: array\n      });\n      dispatch({\n        type: GET_ALL_POSTS,\n        payload: res.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const addPost = data => {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_URL}api/post/`, data).then(res => {\n      if (res.data.errors) {\n        dispatch({\n          type: GET_POST_ERRORS,\n          payload: res.data.errors\n        });\n      } else {\n        dispatch({\n          type: GET_POST_ERRORS,\n          payload: \"\"\n        });\n      }\n    });\n  };\n};\nexport const likePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: LIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const unlikePost = (postId, userId) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\n      data: {\n        id: userId\n      }\n    }).then(res => {\n      dispatch({\n        type: UNLIKE_POST,\n        payload: {\n          postId,\n          userId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const updatePost = (postId, message) => {\n  return dispatch => {\n    return axios({\n      method: \"put\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\n      data: {\n        message\n      }\n    }).then(res => {\n      dispatch({\n        type: UPDATE_POST,\n        payload: {\n          message,\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deletePost = postId => {\n  return dispatch => {\n    return axios({\n      method: \"delete\",\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`\n    }).then(res => {\n      dispatch({\n        type: DELETE_POST,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\n      data: {\n        commenterId,\n        text,\n        commenterPseudo\n      }\n    }).then(res => {\n      dispatch({\n        type: ADD_COMMENT,\n        payload: {\n          postId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const editComment = (postId, commentId, text) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\n      data: {\n        commentId,\n        text\n      }\n    }).then(res => {\n      dispatch({\n        type: EDIT_COMMENT,\n        payload: {\n          postId,\n          commentId,\n          text\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteComment = (postId, commentId) => {\n  return dispatch => {\n    return axios({\n      method: \"patch\",\n      url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\n      data: {\n        commentId\n      }\n    }).then(res => {\n      dispatch({\n        type: DELETE_COMMENT,\n        payload: {\n          postId,\n          commentId\n        }\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const getTrends = sortedArray => {\n  return dispatch => {\n    dispatch({\n      type: GET_TRENDS,\n      payload: sortedArray\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/charr/Desktop/New folder/front-end-app/src/actions/post.actions.js"],"names":["axios","GET_POSTS","GET_ALL_POSTS","ADD_POST","LIKE_POST","UNLIKE_POST","UPDATE_POST","DELETE_POST","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","GET_TRENDS","GET_POST_ERRORS","getPosts","num","dispatch","get","process","env","REACT_APP_API_URL","then","res","array","data","slice","type","payload","catch","err","console","log","addPost","post","errors","likePost","postId","userId","method","url","id","unlikePost","updatePost","message","deletePost","addComment","commenterId","text","commenterPseudo","editComment","commentId","deleteComment","getTrends","sortedArray"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\n// posts\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const LIKE_POST = \"LIKE_POST\";\r\nexport const UNLIKE_POST = \"UNLIKE_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\n// comments\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\n\r\n// trends\r\nexport const GET_TRENDS = \"GET_TRENDS\";\r\n\r\n// errors\r\nexport const GET_POST_ERRORS = \"GET_POST_ERRORS\";\r\n\r\nexport const getPosts = (num) => {\r\n  return (dispatch) => {\r\n    return axios\r\n      .get(`${process.env.REACT_APP_API_URL}api/post/`)\r\n      .then((res) => {\r\n        const array = res.data.slice(0, num);\r\n        dispatch({ type: GET_POSTS, payload: array });\r\n        dispatch({ type: GET_ALL_POSTS, payload: res.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addPost = (data) => {\r\n  return (dispatch) => {\r\n    return axios\r\n      .post(`${process.env.REACT_APP_API_URL}api/post/`, data)\r\n      .then((res) => {\r\n        if (res.data.errors) {\r\n          dispatch({ type: GET_POST_ERRORS, payload: res.data.errors });\r\n        } else {\r\n          dispatch({ type: GET_POST_ERRORS, payload: \"\" });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const likePost = (postId, userId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `${process.env.REACT_APP_API_URL}api/post/like-post/` + postId,\r\n      data: { id: userId },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: LIKE_POST, payload: { postId, userId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const unlikePost = (postId, userId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `${process.env.REACT_APP_API_URL}api/post/unlike-post/` + postId,\r\n      data: { id: userId },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: UNLIKE_POST, payload: { postId, userId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const updatePost = (postId, message) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"put\",\r\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\r\n      data: { message },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: UPDATE_POST, payload: { message, postId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"delete\",\r\n      url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_POST, payload: { postId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const addComment = (postId, commenterId, text, commenterPseudo) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `${process.env.REACT_APP_API_URL}api/post/comment-post/${postId}`,\r\n      data: { commenterId, text, commenterPseudo },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: ADD_COMMENT, payload: { postId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const editComment = (postId, commentId, text) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `${process.env.REACT_APP_API_URL}api/post/edit-comment-post/${postId}`,\r\n      data: { commentId, text },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: EDIT_COMMENT, payload: { postId, commentId, text } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => {\r\n  return (dispatch) => {\r\n    return axios({\r\n      method: \"patch\",\r\n      url: `${process.env.REACT_APP_API_URL}api/post/delete-comment-post/${postId}`,\r\n      data: { commentId },\r\n    })\r\n      .then((res) => {\r\n        dispatch({ type: DELETE_COMMENT, payload: { postId, commentId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const getTrends = (sortedArray) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GET_TRENDS, payload: sortedArray });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}