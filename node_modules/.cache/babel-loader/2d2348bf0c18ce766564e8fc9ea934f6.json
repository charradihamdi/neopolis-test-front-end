{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charr\\\\Desktop\\\\New folder\\\\front-end-app\\\\src\\\\components\\\\Trends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTrends } from \"../actions/post.actions\";\nimport { isEmpty } from \"./Utils\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Trends = () => {\n  _s();\n\n  const posts = useSelector(state => state.allPostsReducer);\n  const usersData = useSelector(state => state.usersReducer);\n  const trendList = useSelector(state => state.trendingReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isEmpty(posts[0])) {\n      const postsArr = Object.keys(posts).map(i => posts[i]);\n      let sortedArray = postsArr.sort((a, b) => {\n        return b.likers.length - a.likers.length;\n      });\n      sortedArray.length = 3;\n      dispatch(getTrends(sortedArray));\n    }\n  }, [posts, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trending-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"End_To_End self service customers segmentation and churn with powerBI and Azure machine learning \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      to: \"/trending\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: trendList.length && trendList.map(post => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [post.picture && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.picture,\n                alt: \"post-pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 38\n              }, this), post.video && /*#__PURE__*/_jsxDEV(\"iframe\", {\n                src: post.video,\n                frameBorder: \"0\",\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowFullScreen: true,\n                title: post._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 23\n              }, this), isEmpty(post.picture) && isEmpty(post.video) && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: usersData[0] && usersData.map(user => {\n                  if (user._id === post.posterId) {\n                    return user.picture;\n                  } else return null;\n                }).join(\"\"),\n                alt: \"profil-pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trend-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Lire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Trends, \"wuDiHFLkYBDRtlCSAJ+qByWl1Yk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Trends;\nexport default Trends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trends\");","map":{"version":3,"sources":["C:/Users/charr/Desktop/New folder/front-end-app/src/components/Trends.js"],"names":["React","useEffect","useDispatch","useSelector","getTrends","isEmpty","NavLink","Trends","posts","state","allPostsReducer","usersData","usersReducer","trendList","trendingReducer","dispatch","postsArr","Object","keys","map","i","sortedArray","sort","a","b","likers","length","post","picture","video","_id","user","posterId","join","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTrends } from \"../actions/post.actions\";\r\nimport { isEmpty } from \"./Utils\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Trends = () => {\r\n  const posts = useSelector((state) => state.allPostsReducer);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const trendList = useSelector((state) => state.trendingReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(posts[0])) {\r\n      const postsArr = Object.keys(posts).map((i) => posts[i]);\r\n      let sortedArray = postsArr.sort((a, b) => {\r\n        return b.likers.length - a.likers.length;\r\n      });\r\n      sortedArray.length = 3;\r\n      dispatch(getTrends(sortedArray));\r\n    }\r\n  }, [posts, dispatch]);\r\n\r\n  return (\r\n    <div className=\"trending-container\">\r\n      <h4>End_To_End self service customers segmentation and churn with powerBI and Azure machine learning </h4>\r\n      <NavLink exact to=\"/trending\">\r\n        <ul>\r\n          {trendList.length &&\r\n            trendList.map((post) => {\r\n              return (\r\n                <li key={post._id}>\r\n                  <div>\r\n                    {post.picture && <img src={post.picture} alt=\"post-pic\" />}\r\n                    {post.video && (\r\n                      <iframe\r\n                        src={post.video}\r\n                        frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen\r\n                        title={post._id}\r\n                      ></iframe>\r\n                    )}\r\n                    {isEmpty(post.picture) && isEmpty(post.video) && (\r\n                      <img src={usersData[0] && usersData.map((user) => {\r\n                        if (user._id === post.posterId) {\r\n                          return user.picture;\r\n                        } else return null;\r\n                      })\r\n                      .join(\"\")\r\n                    } alt=\"profil-pic\"/>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"trend-content\">\r\n                    <p>{post.message}</p>\r\n                    <span>Lire</span>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trends;\r\n"]},"metadata":{},"sourceType":"module"}