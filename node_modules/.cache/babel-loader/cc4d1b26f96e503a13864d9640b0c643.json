{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charr\\\\Desktop\\\\New folder\\\\front-end-app\\\\src\\\\components\\\\Post\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { dateParser, isEmpty } from \"../Utils\";\nimport FollowHandler from \"../Profil/FollowHandler\";\nimport LikeButton from \"./LikeButton\";\nimport { updatePost } from \"../../actions/post.actions\";\nimport DeleteCard from \"./DeleteCard\";\nimport CardComments from \"./CardComments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [isUpdated, setIsUpdated] = useState(false);\n  const [textUpdate, setTextUpdate] = useState(null);\n  const [showComments, setShowComments] = useState(false);\n  const usersData = useSelector(state => state.usersReducer);\n  const userData = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n\n  const updateItem = () => {\n    if (textUpdate) {\n      dispatch(updatePost(post._id, textUpdate));\n    }\n\n    setIsUpdated(false);\n  };\n\n  useEffect(() => {\n    !isEmpty(usersData[0]) && setIsLoading(false);\n  }, [usersData]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: !isEmpty(usersData[0]) && usersData.map(user => {\n            if (user._id === post.posterId) return user.picture;else return null;\n          }).join(\"\"),\n          alt: \"poster-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pseudo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: !isEmpty(usersData[0]) && usersData.map(user => {\n                if (user._id === post.posterId) return user.pseudo;else return null;\n              }).join(\"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), post.posterId !== userData._id && /*#__PURE__*/_jsxDEV(FollowHandler, {\n              idToFollow: post.posterId,\n              type: \"card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: dateParser(post.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), isUpdated === false && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }, this), isUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            defaultValue: post.message,\n            onChange: e => setTextUpdate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: updateItem,\n              children: \"Valider modification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), post.picture && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.picture,\n          alt: \"card-pic\",\n          className: \"card-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), post.video && /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"500\",\n          height: \"300\",\n          src: post.video,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: post._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), userData._id === post.posterId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setIsUpdated(!isUpdated),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./img/icons/edit.svg\",\n              alt: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeleteCard, {\n            id: post._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => setShowComments(!showComments),\n              src: \"./img/icons/message1.svg\",\n              alt: \"comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.comments.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./img/icons/share.svg\",\n            alt: \"share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), showComments && /*#__PURE__*/_jsxDEV(CardComments, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, post._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"BqpVuA4YGvVg2VfIRv2lKZeLwHQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/charr/Desktop/New folder/front-end-app/src/components/Post/Card.js"],"names":["React","useEffect","useState","useDispatch","useSelector","dateParser","isEmpty","FollowHandler","LikeButton","updatePost","DeleteCard","CardComments","Card","post","isLoading","setIsLoading","isUpdated","setIsUpdated","textUpdate","setTextUpdate","showComments","setShowComments","usersData","state","usersReducer","userData","userReducer","dispatch","updateItem","_id","map","user","posterId","picture","join","pseudo","createdAt","message","e","target","value","video","comments","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,UAApC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMoB,SAAS,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AACA,QAAMC,QAAQ,GAAGrB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACG,WAAlB,CAA5B;AACA,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;;AAEA,QAAMyB,UAAU,GAAG,MAAM;AACvB,QAAIV,UAAJ,EAAgB;AACdS,MAAAA,QAAQ,CAAClB,UAAU,CAACI,IAAI,CAACgB,GAAN,EAAWX,UAAX,CAAX,CAAR;AACD;;AACDD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,KAACK,OAAO,CAACgB,SAAS,CAAC,CAAD,CAAV,CAAR,IAA0BP,YAAY,CAAC,KAAD,CAAtC;AACD,GAFQ,EAEN,CAACO,SAAD,CAFM,CAAT;AAIA,sBACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA,cACGR,SAAS,gBACR;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AACE,UAAA,GAAG,EACD,CAACR,OAAO,CAACgB,SAAS,CAAC,CAAD,CAAV,CAAR,IACAA,SAAS,CACNQ,GADH,CACQC,IAAD,IAAU;AACb,gBAAIA,IAAI,CAACF,GAAL,KAAahB,IAAI,CAACmB,QAAtB,EAAgC,OAAOD,IAAI,CAACE,OAAZ,CAAhC,KACK,OAAO,IAAP;AACN,WAJH,EAKGC,IALH,CAKQ,EALR,CAHJ;AAUE,UAAA,GAAG,EAAC;AAVN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACE;AAAA,wBACG,CAAC5B,OAAO,CAACgB,SAAS,CAAC,CAAD,CAAV,CAAR,IACCA,SAAS,CACNQ,GADH,CACQC,IAAD,IAAU;AACb,oBAAIA,IAAI,CAACF,GAAL,KAAahB,IAAI,CAACmB,QAAtB,EAAgC,OAAOD,IAAI,CAACI,MAAZ,CAAhC,KACK,OAAO,IAAP;AACN,eAJH,EAKGD,IALH,CAKQ,EALR;AAFJ;AAAA;AAAA;AAAA;AAAA,oBADF,EAUGrB,IAAI,CAACmB,QAAL,KAAkBP,QAAQ,CAACI,GAA3B,iBACC,QAAC,aAAD;AAAe,cAAA,UAAU,EAAEhB,IAAI,CAACmB,QAAhC;AAA0C,cAAA,IAAI,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAA,sBAAO3B,UAAU,CAACQ,IAAI,CAACuB,SAAN;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAkBGpB,SAAS,KAAK,KAAd,iBAAuB;AAAA,oBAAIH,IAAI,CAACwB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAlB1B,EAmBGrB,SAAS,iBACR;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,YAAY,EAAEH,IAAI,CAACwB,OADrB;AAEE,YAAA,QAAQ,EAAGC,CAAD,IAAOnB,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAFhC;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,KAAlB;AAAwB,cAAA,OAAO,EAAEZ,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,EAgCGf,IAAI,CAACoB,OAAL,iBACC;AAAK,UAAA,GAAG,EAAEpB,IAAI,CAACoB,OAAf;AAAwB,UAAA,GAAG,EAAC,UAA5B;AAAuC,UAAA,SAAS,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAjCJ,EAmCGpB,IAAI,CAAC4B,KAAL,iBACC;AACE,UAAA,KAAK,EAAC,KADR;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,GAAG,EAAE5B,IAAI,CAAC4B,KAHZ;AAIE,UAAA,WAAW,EAAC,GAJd;AAKE,UAAA,KAAK,EAAC,0FALR;AAME,UAAA,eAAe,MANjB;AAOE,UAAA,KAAK,EAAE5B,IAAI,CAACgB;AAPd;AAAA;AAAA;AAAA;AAAA,gBApCJ,EA8CGJ,QAAQ,CAACI,GAAT,KAAiBhB,IAAI,CAACmB,QAAtB,iBACC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAK,YAAA,OAAO,EAAE,MAAMf,YAAY,CAAC,CAACD,SAAF,CAAhC;AAAA,mCACE;AAAK,cAAA,GAAG,EAAC,sBAAT;AAAgC,cAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAEH,IAAI,CAACgB;AAArB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CJ,eAsDE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AACE,cAAA,OAAO,EAAE,MAAMR,eAAe,CAAC,CAACD,YAAF,CADhC;AAEE,cAAA,GAAG,EAAC,0BAFN;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAA,wBAAOP,IAAI,CAAC6B,QAAL,CAAcC;AAArB;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAE9B;AAAlB;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAK,YAAA,GAAG,EAAC,uBAAT;AAAiC,YAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtDF,EAkEGO,YAAY,iBAAI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,gBAlEnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAJJ,KAAoCA,IAAI,CAACgB,GAAzC;AAAA;AAAA;AAAA;AAAA,UADF;AA4FD,CAhHD;;GAAMjB,I;UAKcR,W,EACDA,W,EACAD,W;;;KAPbS,I;AAkHN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dateParser, isEmpty } from \"../Utils\";\r\nimport FollowHandler from \"../Profil/FollowHandler\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport { updatePost } from \"../../actions/post.actions\";\r\nimport DeleteCard from \"./DeleteCard\";\r\nimport CardComments from \"./CardComments\";\r\n\r\nconst Card = ({ post }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n  const [textUpdate, setTextUpdate] = useState(null);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateItem = () => {\r\n    if (textUpdate) {\r\n      dispatch(updatePost(post._id, textUpdate));\r\n    }\r\n    setIsUpdated(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    !isEmpty(usersData[0]) && setIsLoading(false);\r\n  }, [usersData]);\r\n\r\n  return (\r\n    <li className=\"card-container\" key={post._id}>\r\n      {isLoading ? (\r\n        <i className=\"fas fa-spinner fa-spin\"></i>\r\n      ) : (\r\n        <>\r\n          <div className=\"card-left\">\r\n            <img\r\n              src={\r\n                !isEmpty(usersData[0]) &&\r\n                usersData\r\n                  .map((user) => {\r\n                    if (user._id === post.posterId) return user.picture;\r\n                    else return null;\r\n                  })\r\n                  .join(\"\")\r\n              }\r\n              alt=\"poster-pic\"\r\n            />\r\n          </div>\r\n          <div className=\"card-right\">\r\n            <div className=\"card-header\">\r\n              <div className=\"pseudo\">\r\n                <h3>\r\n                  {!isEmpty(usersData[0]) &&\r\n                    usersData\r\n                      .map((user) => {\r\n                        if (user._id === post.posterId) return user.pseudo;\r\n                        else return null;\r\n                      })\r\n                      .join(\"\")}\r\n                </h3>\r\n                {post.posterId !== userData._id && (\r\n                  <FollowHandler idToFollow={post.posterId} type={\"card\"} />\r\n                )}\r\n              </div>\r\n              <span>{dateParser(post.createdAt)}</span>\r\n            </div>\r\n            {isUpdated === false && <p>{post.message}</p>}\r\n            {isUpdated && (\r\n              <div className=\"update-post\">\r\n                <textarea\r\n                  defaultValue={post.message}\r\n                  onChange={(e) => setTextUpdate(e.target.value)}\r\n                />\r\n                <div className=\"button-container\">\r\n                  <button className=\"btn\" onClick={updateItem}>\r\n                    Valider modification\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {post.picture && (\r\n              <img src={post.picture} alt=\"card-pic\" className=\"card-pic\" />\r\n            )}\r\n            {post.video && (\r\n              <iframe\r\n                width=\"500\"\r\n                height=\"300\"\r\n                src={post.video}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n                title={post._id}\r\n              ></iframe>\r\n            )}\r\n            {userData._id === post.posterId && (\r\n              <div className=\"button-container\">\r\n                <div onClick={() => setIsUpdated(!isUpdated)}>\r\n                  <img src=\"./img/icons/edit.svg\" alt=\"edit\" />\r\n                </div>\r\n                <DeleteCard id={post._id} />\r\n              </div>\r\n            )}\r\n            <div className=\"card-footer\">\r\n              <div className=\"comment-icon\">\r\n                <img\r\n                  onClick={() => setShowComments(!showComments)}\r\n                  src=\"./img/icons/message1.svg\"\r\n                  alt=\"comment\"\r\n                />\r\n                <span>{post.comments.length}</span>\r\n              </div>\r\n              <LikeButton post={post} />\r\n              <img src=\"./img/icons/share.svg\" alt=\"share\" />\r\n            </div>\r\n            {showComments && <CardComments post={post} />}\r\n          </div>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}