{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charr\\\\Desktop\\\\New folder\\\\front-end-app\\\\src\\\\components\\\\Post\\\\CardComments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment, getPosts } from \"../../actions/post.actions\";\nimport FollowHandler from \"../Profil/FollowHandler\";\nimport { isEmpty, timestampParser } from \"../Utils\";\nimport EditDeleteComment from \"./EditDeleteComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardComments = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const usersData = useSelector(state => state.usersReducer);\n  const userData = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n\n  const handleComment = e => {\n    e.preventDefault();\n\n    if (text) {\n      dispatch(addComment(post._id, userData._id, text, userData.pseudo)).then(() => dispatch(getPosts())).then(() => setText(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-container\",\n    children: [post.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: comment.commenterId === userData._id ? \"comment-container client\" : \"comment-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-part\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: !isEmpty(usersData[0]) && usersData.map(user => {\n              if (user._id === comment.commenterId) return user.picture;else return null;\n            }).join(\"\"),\n            alt: \"commenter-pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-part\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pseudo\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: comment.commenterPseudo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), comment.commenterId !== userData._id && /*#__PURE__*/_jsxDEV(FollowHandler, {\n                idToFollow: comment.commenterId,\n                type: \"card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: timestampParser(comment.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(EditDeleteComment, {\n            comment: comment,\n            postId: post._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }), userData._id && /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleComment,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        onChange: e => setText(e.target.value),\n        value: text,\n        placeholder: \"Laisser un commentaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardComments, \"ZHyW6oEmvqsEpl2vcMvFa+6fKc4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CardComments;\nexport default CardComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardComments\");","map":{"version":3,"sources":["C:/Users/charr/Desktop/New folder/front-end-app/src/components/Post/CardComments.js"],"names":["React","useState","useDispatch","useSelector","addComment","getPosts","FollowHandler","isEmpty","timestampParser","EditDeleteComment","CardComments","post","text","setText","usersData","state","usersReducer","userData","userReducer","dispatch","handleComment","e","preventDefault","_id","pseudo","then","comments","map","comment","commenterId","user","picture","join","commenterPseudo","timestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addComment, getPosts } from \"../../actions/post.actions\";\r\nimport FollowHandler from \"../Profil/FollowHandler\";\r\nimport { isEmpty, timestampParser } from \"../Utils\";\r\nimport EditDeleteComment from \"./EditDeleteComment\";\r\n\r\nconst CardComments = ({ post }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const usersData = useSelector((state) => state.usersReducer);\r\n  const userData = useSelector((state) => state.userReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (text) {\r\n      dispatch(addComment(post._id, userData._id, text, userData.pseudo))\r\n        .then(() => dispatch(getPosts()))\r\n        .then(() => setText(''));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      {post.comments.map((comment) => {\r\n        return (\r\n          <div\r\n            className={\r\n              comment.commenterId === userData._id\r\n                ? \"comment-container client\"\r\n                : \"comment-container\"\r\n            }\r\n            key={comment._id}\r\n          >\r\n            <div className=\"left-part\">\r\n              <img\r\n                src={\r\n                  !isEmpty(usersData[0]) &&\r\n                  usersData\r\n                    .map((user) => {\r\n                      if (user._id === comment.commenterId) return user.picture;\r\n                      else return null;\r\n                    })\r\n                    .join(\"\")\r\n                }\r\n                alt=\"commenter-pic\"\r\n              />\r\n            </div>\r\n            <div className=\"right-part\">\r\n              <div className=\"comment-header\">\r\n                <div className=\"pseudo\">\r\n                  <h3>{comment.commenterPseudo}</h3>\r\n                  {comment.commenterId !== userData._id && (\r\n                    <FollowHandler\r\n                      idToFollow={comment.commenterId}\r\n                      type={\"card\"}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <span>{timestampParser(comment.timestamp)}</span>\r\n              </div>\r\n              <p>{comment.text}</p>\r\n              <EditDeleteComment comment={comment} postId={post._id} />\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {userData._id && (\r\n        <form action=\"\" onSubmit={handleComment} className=\"comment-form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            onChange={(e) => setText(e.target.value)}\r\n            value={text}\r\n            placeholder=\"Laisser un commentaire\"\r\n          />\r\n          <br />\r\n          <input type=\"submit\" value=\"Envoyer\" />\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComments;\r\n"]},"metadata":{},"sourceType":"module"}